<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise game variables

// The game's core state
// This will update depending on what situation the player gets into
// 0 - [Scene] Menu
// 1 - [Animation] Menu to character select
// 2 - [Scene] Character select
// 3 - [Animation] Character select to conversation
// 4 - [Scene] Conversation
// 5 - [Animation] Conversation to character select
// 6 - [Scene] Gameover
// 7 - [Scene] Victory
gameState = 0;

// Sin wave incremental
n = 0;

// Generic sprite speed
spriteSpeed = 0.2;

// Generic transition speed
transitionSpeed = 3;

// Generic blinking rate
blinkRate = 300;

// ==================
// Menu
// ==================

// Menu sprite index
menuIndex = 0;

// Menu sprite vertical position
menuPosition = 0;

// ==================
// Character Select
// ==================

// Character vertical positions
charSelectPosition = room_height;

// Character sprites
charSprites = ds_list_create();
ds_list_add(charSprites, sprRocker, sprNerd, sprLad, sprJoker);

// Character sprite indexes
charIndexes = ds_list_create();
ds_list_add(charIndexes,
    random_range(0, blinkRate / 2),
    random_range(0, blinkRate / 2),
    random_range(0, blinkRate / 2),
    random_range(0, blinkRate / 2)
);

// Character bob offsets
charBobOffsets = ds_list_create();
ds_list_add(charBobOffsets,
    random_range(0, 360),
    random_range(0, 360),
    random_range(0, 360),
    random_range(0, 360)
);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Graphical effects

n += 1;

// Menu to character select
if (gameState == 1) {
    if (menuPosition &lt;= room_height) {
        if (menuIndex &lt; 18) {
            menuIndex += spriteSpeed;
        } else {
            menuPosition += transitionSpeed;
            charSelectPosition = room_height - menuPosition;
        }
    } else {
        gameState = 2;
    }
}

// Character select blinking
if (is_character_select()) {
    for (var i = 0; i &lt; ds_list_size(charIndexes); i += 1) {
        var charIndex = ds_list_find_value(charIndexes, i);
        charIndex += 1;
        if (charIndex &gt; blinkRate) {
            charIndex = random_range(0, blinkRate / 2);
        }
        ds_list_replace(charIndexes, i, charIndex);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle click event

switch (gameState) {

    // Commence the menu animation
    case 0:
        gameState = 1;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw UI elements

// Character select
if (is_character_select()) {
    for (var i = 0; i &lt; ds_list_size(charSprites) i += 1) {
        draw_sprite(
             ds_list_find_value(charSprites, i),
            clamp(ds_list_find_value(charIndexes, i) - blinkRate + 10, 0, 1),
            ((room_width / 4) * i + (room_width / 8)),
            room_height + charSelectPosition + 4 + bob(0.02, 2, ds_list_find_value(charBobOffsets, i))
        );
    }
}

// Menu
if (is_menu()) {
    draw_sprite(sprMenu, menuIndex, 0, menuPosition);
    draw_sprite(sprLogo, 0, 0, 4 + menuPosition + bob(0.04, 4, 0));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
